name: Generate PDF from README.md

on:
  push:
    branches:
      - main
      - create-pdf-generation-workflow
  workflow_dispatch:

jobs:
  convert_to_pdf:
    runs-on: ubuntu-latest

    services:
      gotenberg:
        image: thecodingmachine/gotenberg:8
        ports:
          - 3000:3000
        options: --health-cmd="curl --fail http://localhost:3000/health" --health-interval=10s --health-timeout=5s --health-retries=5
      
    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Wait for Gotenberg to start using `until`
    - name: Wait for Gotenberg to start
      run: |
        until curl -s http://localhost:3000/health; do
          echo "Waiting for Gotenberg to be ready..."
          sleep 5
        done

    # Step 3: Execute the conversion script
    - name: Execute conversion script
      run: |
        # Get the dynamic branch name from GITHUB_REF
        BRANCH_NAME=${GITHUB_REF#refs/heads/}
        # Construct the URL dynamically using GITHUB_REPOSITORY and the branch name
        REPO_URL=https://github.com/${GITHUB_REPOSITORY}/blob/${BRANCH_NAME}
        # Call the script with the dynamic URL
        ./convert-links.sh "$REPO_URL" README.md

    # Step 4: Convert Markdown to PDF
    - name: Convert README.md to PDF
      run: |
        curl --request POST 'http://localhost:3000/forms/chromium/convert/markdown' \
            --form 'files=@index.html' \
            --form 'files=@README.md' \
            --form 'files=@style.css' \
            --form singlePage=true \
            --output resume.pdf

    # Step 5: Upload the PDF to the subfolder via FTP
    - name: Upload to FTP
      run: |
        curl -T resume.pdf ftp://${{ secrets.FTP_HOST }}/ \
        --user ${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}

    # Step 6: Upload the PDF as an artifact
    - name: Upload PDF as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: converted-pdf
        path: resume.pdf
